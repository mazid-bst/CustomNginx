apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  namespace: default
  name: mazid-temp
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/subnets: subnet-03fa749116300e41e,subnet-09b2f3c7cbcbb6c9d
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'
    #alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:362977260021:certificate/351e2a24-83bc-409c-b39a-fa63235622fc
    #alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/actions.rule-path3: '{"type":"forward","ForwardConfig":{"TargetGroups":[{"ServiceName":"nginx-in","ServicePort":"80"}]}}'
    alb.ingress.kubernetes.io/conditions.rule-path3: '[{"field":"http-header","httpHeaderConfig":{"httpHeaderName": "cloudfront-viewer-country", "values":["IN"]}}]'
    alb.ingress.kubernetes.io/actions.rule-path4: '{"type":"forward","ForwardConfig":{"TargetGroups":[{"ServiceName":"nginx-us","ServicePort":"80"}]}}'
    alb.ingress.kubernetes.io/conditions.rule-path4: '[{"field":"http-header","httpHeaderConfig":{"httpHeaderName": "cloudfront-viewer-country", "values":["US"]}}]'
    alb.ingress.kubernetes.io/actions.rule-path5: '{"type":"forward","ForwardConfig":{"TargetGroups":[{"ServiceName":"nginx-sg","ServicePort":"80"}]}}'
    alb.ingress.kubernetes.io/conditions.rule-path5: '[{"field":"http-header","httpHeaderConfig":{"httpHeaderName": "cloudfront-viewer-country", "values":["SG"]}}]'
    alb.ingress.kubernetes.io/actions.rule-path6: '{"type":"forward","ForwardConfig":{"TargetGroups":[{"ServiceName":"nginx-global","ServicePort":"80"}]}}'

spec:
  backend:
    serviceName: rule-path6
    servicePort: use-annotation
  rules:
  - http:
      paths:
        - backend:
            serviceName: rule-path3
            servicePort: use-annotation
        - backend:
            serviceName: rule-path4
            servicePort: use-annotation
        - backend:
            serviceName: rule-path5
            servicePort: use-annotation
