apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  namespace: default
  name: mazid-temp
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/subnets: subnet-03fa749116300e41e,subnet-09b2f3c7cbcbb6c9d
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'
    #alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:362977260021:certificate/351e2a24-83bc-409c-b39a-fa63235622fc
    #alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/actions.forward-multiple-tg: '{"Type":"forward","ForwardConfig":{"TargetGroups":[{"ServiceName":"nginx-new","ServicePort":"80","Weight":WEIGHTOFNEW},{"ServiceName":"nginx-old","ServicePort":"8080","Weight":WEIGHTOFOLD}]}}'

spec:
  rules:
  - http:
      paths:
        # - backend:
        #     serviceName: nginx-old
        #     servicePort: 8080
        - backend:
            serviceName: forward-multiple-tg
            servicePort: use-annotation
        # - path: /*
        #   backend:
        #     serviceName: nginx-new
        #     servicePort: 80

#  spec:
#    rules:
#      - host: staging-aws.carl.gg
#        http:
#          paths:
#            - path: /*
#              backend:
# #               serviceName: ssl-redirect
# #               servicePort: use-annotation
# #           - path: /api/*
# #             backend:
# #               serviceName: carlbot-api-svc
# #               servicePort: 5000
# #           - path: /webhooks/*
# #             backend:
# #               serviceName: webhook-checker-svc
# #               servicePort: 1337
# #           - path: /*
# #             backend:
# #               serviceName: static-svc
# #               servicePort: 80
